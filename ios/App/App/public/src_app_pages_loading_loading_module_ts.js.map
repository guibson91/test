{"version":3,"file":"src_app_pages_loading_loading_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;CAAG;AAA3B,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;CAAG;AAApB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBoB;AACX;AACqB;AACI;AACjB;AAE/C;;;;;GAKG;IAMU,WAAW,SAAX,WAAY,SAAQ,yDAAS;IACxC,YAAmB,MAAqB,EAAS,WAAwB;QACvE,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QADV,WAAM,GAAN,MAAM,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAa;IAEzE,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,qDAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACjD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;iBAAM;gBACL,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YA5BQ,0EAAa;YADb,sEAAW;;AAeP,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW,CAcvB;AAduB","sources":["./src/app/pages/loading/loading-routing.module.ts","./src/app/pages/loading/loading.module.ts","./src/app/pages/loading/loading.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoadingPage } from './loading.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoadingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoadingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoadingPageRoutingModule } from './loading-routing.module';\n\nimport { LoadingPage } from './loading.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoadingPageRoutingModule\n  ],\n  declarations: [LoadingPage]\n})\nexport class LoadingPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { SharedService } from 'src/app/services/shared.service';\nimport { SuperPage } from 'src/app/util/super';\n\n/**\n * Página inicial do sistema que controla o fluxo\n * AuthService dispara o user de acordo com o listenUser();\n * Se listenUser() conseguir recuperar o usuário, é direcionado para 'home'\n * Se listenUser() não conseguir recuperar usuário, é direcionado para 'login'\n */\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.page.html',\n  styleUrls: ['./loading.page.scss'],\n})\nexport class LoadingPage extends SuperPage implements OnInit {\n  constructor(public shared: SharedService, public authService: AuthService) {\n    super(shared, authService);\n  }\n\n  ngOnInit() {\n    this.shared.user$.pipe(first()).subscribe((user) => {\n      if (user) {\n        this.rootPage();\n      } else {\n        this.rootPage('login');\n      }\n    });\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}